{"version":3,"sources":["Feedback/feedBack.module.css","Feedback/Section.jsx","Feedback/Statistic.jsx","Feedback/FeedbackOptions.jsx","Feedback/Notification.jsx","App.js","index.js","Feedback/Section.module.css"],"names":["module","exports","Section","title","children","className","styles","container","defaultProps","Statistic","good","neutral","bad","total","positivePercentage","btn__container","list","item","text","FeedbackOptions","options","onLeaveFeedback","btn__section","Object","keys","map","key","btn","onClick","Notification","message","App","state","props","initialValue","feedbackCounter","event","setState","preState","countTotalFeedback","values","reduce","value","positivePercentag","Math","round","this","isTotal","Number","isFinite","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26fd5900.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn__container\":\"feedBack_btn__container__1BoNl\",\"btn__section\":\"feedBack_btn__section__pQMOm\",\"btn\":\"feedBack_btn__27WPL\",\"list\":\"feedBack_list__1yWsm\",\"item\":\"feedBack_item__1Obj5\",\"text\":\"feedBack_text__2kqyv\",\"notification\":\"feedBack_notification__2IHOZ\",\"message\":\"feedBack_message__3Nvu0\",\"container\":\"feedBack_container__3F_uw\"};","import PropTypes from 'prop-types';\r\nimport styles from '../Feedback/Section.module.css';\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.container}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\nSection.defaultProps = {\r\n  title: '',\r\n};\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport styles from '../Feedback/feedBack.module.css';\r\n\r\nconst Statistic = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  \r\n  return (\r\n    <div className={styles.btn__container}>\r\n      <ul className={styles.list}>\r\n        <li className={styles.item}>\r\n          {' '}\r\n          <span className={styles.text}>Good:</span> {good}\r\n        </li>\r\n        <li className={styles.item}>\r\n          <span className={styles.text}>Neutral:</span>\r\n          {neutral}\r\n        </li>\r\n        <li className={styles.item}>\r\n          <span className={styles.text}>Bad:</span>\r\n          {bad}\r\n        </li>\r\n        <li className={styles.item}>\r\n          <span className={styles.text}>Positive Feedback:</span>\r\n          {positivePercentage()}%\r\n        </li>\r\n        <li className={styles.item}>\r\n          {' '}\r\n          <span className={styles.text}>Total:</span>\r\n          {total()}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistic.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func,\r\n  positivePercentage: PropTypes.func,\r\n};\r\n\r\nexport default Statistic;\r\n","import PropTypes from 'prop-types';\r\nimport styles from '../Feedback/feedBack.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  \r\n  return (\r\n    <div className={styles.btn__section}>\r\n      {Object.keys(options).map(key => (\r\n        <button\r\n          className={styles.btn}\r\n          key={key}\r\n          onClick={() => onLeaveFeedback(key)}\r\n        >\r\n          {key}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.shape({\r\n    onLeaveFeedback: PropTypes.func,\r\n  }).isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport styles from '../Feedback/feedBack.module.css';\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.message}>{message}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import Section from './Feedback/Section';\nimport Statistic from './Feedback/Statistic';\nimport FeedbackOptions from './Feedback/FeedbackOptions';\nimport { Component } from 'react';\nimport Notification from './Feedback/Notification';\n\nclass App extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n  state = {\n    good: this.props.initialValue,\n    neutral: this.props.initialValue,\n    bad: this.props.initialValue,\n  };\n\n  feedbackCounter = event => {\n    this.setState(preState => {\n      return {\n        [event]: preState[event] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const values = Object.values(this.state);\n    let total = values.reduce((total, value) => total + value, 0);\n    return total;\n  };\n\n  positivePercentag = () => {\n    let positive = 0;\n    let total = this.countTotalFeedback();\n    positive = Math.round((this.state.good * 100) / total);\n    return positive;\n  };\n\n  render() {\n    const { good } = this.state;\n    const { neutral } = this.state;\n    const { bad } = this.state;\n    let isTotal = this.positivePercentag();\n\n    return (\n      <div className=\"FeadBack\">\n        <Section title=\"Please leave Feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.feedbackCounter}\n          />\n        </Section>\n        <div>\n          {Number.isFinite(isTotal) ? (\n            <Section title=\"Statistic\">\n              <Statistic\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={this.countTotalFeedback}\n                positivePercentage={this.positivePercentag}\n              />\n            </Section>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3_dbk\",\"container\":\"Section_container__3xozd\"};"],"sourceRoot":""}